if starting then
// define deadzone, calibration and sensitivity
var.calibrationGyro = [2.5, -1.5] // [Yaw, Pitch]
var.deadzoneGyro = [5, 5] // [Yaw, Pitch]
var.sensitivityGyro = [0.55, 0.65] // [Yaw, Pitch]; lower values result in slower movements, negative values will invert the corresponding mouse axis
endif

// hold B to move mouse with WiiMote
if (WiiMote.B) then
var.Gyro = [0, 0]
if (Abs(WiiMote.MotionPlus.YawSpeed + var.calibrationGyro[1]) > var.deadzoneGyro[1]) then var.Gyro[1] = RemoveUnits(WiiMote.MotionPlus.YawSpeed + var.calibrationGyro[1]) - (Sign(WiiMote.MotionPlus.YawSpeed) * var.deadzoneGyro[1])
if (Abs(WiiMote.MotionPlus.PitchSpeed + var.calibrationGyro[2]) > var.deadzoneGyro[2]) then var.Gyro[2] = RemoveUnits(WiiMote.MotionPlus.PitchSpeed + var.calibrationGyro[2]) - (Sign(WiiMote.MotionPlus.PitchSpeed) * var.deadzoneGyro[2])
Mouse.DirectInputX = Mouse.DirectInputX + (var.Gyro[1] * var.sensitivityGyro[1])
Mouse.DirectInputY = Mouse.DirectInputY + (-1 * var.Gyro[2] * var.sensitivityGyro[2])
endif
